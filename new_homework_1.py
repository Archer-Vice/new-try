
### Последняя версия 2 и 3 задания из 1 урока. Сделанная самостоятельно. 


""" 2. Создать список, состоящий из кубов нечётных чисел от 1 до 1000 (куб X - третья степень числа X):
Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7. Например, число «19 ^ 3 = 6859»
будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7. Внимание: использовать только арифметические операции!
К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
* Решить задачу под пунктом b, не создавая новый список. """

numbers = []
for i in range(1000):
    if i % 2 == 1:
        numbers.append(i**3)   ### Этот код создаёт список нечётных цифр от 1 до 1000 и возводит каждую цифру в 3 степень.
    elif i % 2 == 0:
        continue
print(numbers)

for number in range(len(numbers)):
    numbers[number] = list(int(d) for d in str(numbers[number]))
    numbers[number] = sum(numbers[number]) ### Этот код поочерёдно разбивает числа из списка на состовляющие цифры и складывает их.

b = []
for n in range(len(numbers)):
    if numbers[n] % 7 == 1:
        continue                         ### Этот код отбирает из списка те числа, что делятся на 7 на цело,
    elif numbers[n] % 7 == 0:               ###  прибавляет к ним 17 и записывает в отдельный список.
        b.append(numbers[n] + 17)

print(numbers)
print(sum(b))           ### Сумма цифр из списка.


""" Second version of first exercise """

numbers = []
for i in range(1000):
    if i % 2 == 1:
        numbers.append(i**3)
    elif i % 2 == 0:
        continue

print(numbers)

for number in range(len(numbers)):
    numbers[number] = list(int(d) for d in str(numbers[number]))
    numbers[number] = sum(numbers[number])

c = 0
for n in range(len(numbers)):
    if numbers[n] % 7 == 1:     ### Всё то же самое, что и в коде выше. Отличие в этом, последнем абзаце. Тут пропсан способ
        continue                   ### обойтись без создания второго списка путём создания переменной.
    elif numbers[n] % 7 == 0:
        c = c + (numbers[n] + 17)

print(numbers)
print(c)

""" 3.Склонение слова
Реализовать склонение слова «процент» во фразе «N процентов».
Вывести эту фразу на экран отдельной строкой для каждого из чисел в интервале от 1 до 100:
1 процент
2 процента
3 процента
4 процента
5 процентов
6 процентов
...
100 процентов

Задачи со * предназначены для продвинутых учеников, которым мало сделать обычное задание.
Пробуйте их решать, если уверены в своих силах. """


f = 25
f = str(f)

if f in ("11", "12", "13", "14"):
    print(f, "процентов")
elif f[-1] == "1":
    print(f, "процент")
elif f[-1] in ("2","3","4"):
    print(f, "процента")
else:
    print(f, "процентов")